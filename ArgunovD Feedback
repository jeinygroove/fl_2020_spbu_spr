# Feedback for Argunov Danil
## Programm 1
Алгоритм Евклида для поиска НОД
`{ read (a);
   read (b);
   if (a<b) {
     assign c (a);
     assign a (b);
     assign b (c);}
   else {};
   while (b) {
     assign c (b);
     assign b (a-(a/b));
     assign a (c);};
   write (a);}`
   
## Programm 2
Бинарное возведение в степень
`{read (a);
  read (p);
  assign res (1);
  while (p) {
    if (p/2==1) {
      assign res (res*a);}
    else {};
  assign a (a*a);
  assign p (p/2);};
  write (res);}`
  
  Удобный и понятный в использовании язык без особых излишеств. Документация вопросов не вызвала, багов также не было найдено.
  Что я бы поменяла? Избавилась от необходимости писать скобки в `read` (e.g. `read (rock)`), добавила бы возможность
писать пробелы в выражениях (из-за этого долго дебажила программу).
  Также, к сожалению, автор отобрал у нас возможность давать имя переменной `rock'n'roll`, как можно делать в 
замечательном Haskell, но кто мы такие, чтобы судить, я уверена, что у автора была веская причина запретить это. Но спасибо за `a', a''`, 
возможность давать переменным однообразные имена (помогает не париться из-за имен и при необходимости просто дописть N штришков).
  По поводу скобок в `read (var)` автор ответил, что так ему показалось удобнее :)
  Также в программах можно писать кучу пробелов и переводов строки, что очень удобно!
  
  

